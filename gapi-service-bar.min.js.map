{"version":3,"sources":["app.module.js","gapi-service-bar-controller.js","gapi-service-bar-directive.js","gapi-service-bar-service.js"],"names":["angular","module","GapiServiceBarController","$scope","gapiServiceBarService","configUI","$","tooltip","trigger","on","this","find","first","stop","slideDown","slideUp","userPanel","console","log","userSettings","userHelp","openTicket","logout","success","data","$broadcast","error","reason","hideTooltip","companyName","currentApplicationName","getCurrentApplication","user","getUser","applications","getApplications","notifications","getNotifications","messages","getMessages","$inject","controller","directive","require","restrict","templateUrl","GapiServiceBarService","core","$http","$localstorage","$sessionstorage","$q","logoutDefer","defer","get","getUrl","remove","resolve","reject","promise","username","img","callbackurl","name","aplicacao","description","timespan","currentApplication","service"],"mappings":"CACA,WACA,YAGAA,SAAAC,OAAA,kBAAA,gBCJA,WACA,YAEA,SAAAC,GAAAC,EAAAC,GAGA,QAAAC,KAEAC,EAAA,2BAAAC,SAAAC,QAAA,UAGAF,EAAA,aAAAG,GAAA,mBAAA,WACAH,EAAAI,MAAAC,KAAA,kBAAAC,QAAAC,MAAA,GAAA,GAAAC,cAIAR,EAAA,aAAAG,GAAA,mBAAA,WACAH,EAAAI,MAAAC,KAAA,kBAAAC,QAAAC,MAAA,GAAA,GAAAE,YAKAZ,EAAAa,UAAA,WACAC,QAAAC,IAAA,cAGAf,EAAAgB,aAAA,WACAF,QAAAC,IAAA,iBAGAf,EAAAiB,SAAA,WACAH,QAAAC,IAAA,aAGAf,EAAAkB,WAAA,WACAJ,QAAAC,IAAA,eAGAf,EAAAmB,OAAA,WACAlB,EAAAkB,SACAC,QAAA,SAAAC,GACArB,EAAAsB,WAAA,cAAAD,KAEAE,MAAA,SAAAC,GACAxB,EAAAsB,WAAA,cAAAE,MAIAxB,EAAAyB,YAAA,WACAtB,EAAA,2BAAAC,QAAA,SAGA,WAGAJ,EAAA0B,YAAA,UAGA1B,EAAA2B,uBAAA1B,EAAA2B,wBAGA5B,EAAA6B,KAAA5B,EAAA6B,UAGA9B,EAAA+B,aAAA9B,EAAA+B,kBAGAhC,EAAAiC,cAAAhC,EAAAiC,mBAGAlC,EAAAmC,SAAAlC,EAAAmC,cAGAlC,OAQAH,EAAAsC,SAAA,SAAA,yBAEAxC,QAAAC,OAAA,kBAAAwC,WAAA,2BAAAvC,MClFAF,QAAAC,OAAA,kBAAAyC,UAAA,iBAAA,WACA,YAEA,QACAC,QAAA,UACAC,SAAA,IACAC,YAAA,mDACAJ,WAAA,8BCNA,WACA,YAEA,SAAAK,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEAzC,KAAAY,OAAA,WAEA,GAAA8B,GAAAD,EAAAE,OAkBA,OAhBAL,GAAAM,IAAAP,EAAAQ,SAAA,iCACAhC,QAAA,SAAAC,GAEAyB,EAAAO,OAAA,aAGAN,EAAAM,OAAA,cAGAJ,EAAAK,QAAAjC,KAEAE,MAAA,SAAAC,GAEAyB,EAAAM,OAAA/B,KAGAyB,EAAAO,SAGAjD,KAAAuB,QAAA,WACA,MAAAgB,GAAAK,IAAA,eAAAM,SAAA,UAAAC,IAAA,qEAGAnD,KAAAyB,gBAAA,WACA,MAAAc,GAAAK,IAAA,wBAAAQ,YAAA,wBAAAC,KAAA,aAGArD,KAAA2B,iBAAA,WAEA,MAAAY,GAAAK,IAAA,yBAAAU,UAAA,UAAAC,YAAA,uBAAAC,SAAA,iBAGAxD,KAAA6B,YAAA,WACA,UAGA7B,KAAAqB,sBAAA,WACA,GAAAoC,GAAAlB,EAAAK,IAAA,6BAAA,SACA,OAAAa,GAAA,OAKArB,EAAAN,SAAA,iBAAA,QAAA,gBAAA,kBAAA,MAEAxC,QAAAC,OAAA,kBAAAmE,QAAA,wBAAAtB","file":"gapi-service-bar.min.js","sourcesContent":["/*global angular,console*/\r\n(function () {\r\n    'use strict';\r\n\r\n    // Module dependencies injection\r\n    angular.module('gapiServiceBar', ['aruba.js']);\r\n\r\n}());\r\n","/*global angular, console, $ */\r\n(function () {\r\n    \"use strict\";\r\n\r\n    function GapiServiceBarController($scope, gapiServiceBarService) {\r\n\r\n        /* Private Functions */\r\n        function configUI() {\r\n            // Tooltip\r\n            $(\"[data-toggle='tooltip']\").tooltip({ trigger: 'hover' });\r\n\r\n            // Add slidedown animation to dropdown\r\n            $('.dropdown').on('show.bs.dropdown', function () {\r\n                $(this).find('.dropdown-menu').first().stop(true, true).slideDown();\r\n            });\r\n\r\n            // Add slideup animation to dropdown\r\n            $('.dropdown').on('hide.bs.dropdown', function () {\r\n                $(this).find('.dropdown-menu').first().stop(true, true).slideUp();\r\n            });\r\n        }\r\n\r\n        /* $scope Functions */\r\n        $scope.userPanel = function () {\r\n            console.log('UserPanel');\r\n        };\r\n\r\n        $scope.userSettings = function () {\r\n            console.log('UserSettings');\r\n        };\r\n\r\n        $scope.userHelp = function () {\r\n            console.log('userHelp');\r\n        };\r\n\r\n        $scope.openTicket = function () {\r\n            console.log('openTicket');\r\n        };\r\n\r\n        $scope.logout = function () {\r\n            gapiServiceBarService.logout()\r\n                .success(function (data) {\r\n                    $scope.$broadcast('GAPI-LOGOUT', data);\r\n                })\r\n                .error(function (reason) {\r\n                    $scope.$broadcast('GAPI-LOGOUT', reason);\r\n                });\r\n        };\r\n\r\n        $scope.hideTooltip = function () {\r\n            $(\"[data-toggle='tooltip']\").tooltip('hide');\r\n        };\r\n\r\n        (function () {\r\n\r\n            // Title\r\n            $scope.companyName = 'Cliente';\r\n\r\n            // Current Application Name\r\n            $scope.currentApplicationName = gapiServiceBarService.getCurrentApplication();\r\n\r\n            // User\r\n            $scope.user = gapiServiceBarService.getUser();\r\n\r\n            // Applications\r\n            $scope.applications = gapiServiceBarService.getApplications();\r\n\r\n            // Notifications\r\n            $scope.notifications = gapiServiceBarService.getNotifications();\r\n\r\n            // Messages\r\n            $scope.messages = gapiServiceBarService.getMessages();\r\n\r\n            // Configure UI elements\r\n            configUI();\r\n\r\n        }());\r\n\r\n\r\n\r\n    }\r\n\r\n    GapiServiceBarController.$inject = ['$scope', 'gapiServiceBarService'];\r\n\r\n    angular.module('gapiServiceBar').controller('GapiServiceBarController', GapiServiceBarController);\r\n\r\n}());","/*global angular, console, document*/\r\n\r\nangular.module('gapiServiceBar').directive('gapiServiceBar', function () {\r\n    \"use strict\";\r\n\r\n    return {\r\n        require: \"ngModel\",\r\n        restrict: 'E',\r\n        templateUrl: '../vendor/gapi-service-bar/gapi-service-bar.html',\r\n        controller: 'GapiServiceBarController'\r\n    };\r\n\r\n});\r\n","/*global angular, console, FormData*/\r\n/*jslint todo: true */\r\n\r\n(function () {\r\n    \"use strict\";\r\n\r\n    function GapiServiceBarService(core, $http,  $localstorage, $sessionstorage, $q) {\r\n\r\n        this.logout = function () {\r\n\r\n            var logoutDefer = $q.defer();\r\n\r\n            $http.get(core.getUrl() + 'accounts/credentials/_logout/')\r\n                .success(function (data) {\r\n                    // Removes from localstorage\r\n                    $localstorage.remove('gapi-user');\r\n\r\n                    // Removes from sessionstorage\r\n                    $sessionstorage.remove('gapi-token');\r\n\r\n                    // Promise Resolve\r\n                    logoutDefer.resolve(data);\r\n                })\r\n                .error(function (reason) {\r\n                    // Promise Reject\r\n                    logoutDefer.reject(reason);\r\n                });\r\n\r\n            return logoutDefer.promise;\r\n        };\r\n\r\n        this.getUser = function () {\r\n            return $localstorage.get('gapi-user') || { \"username\": \"Usuário\", \"img\": \"http://harditech.com/wp-content/themes/damian/images/no_user.png\" };\r\n        };\r\n\r\n        this.getApplications = function () {\r\n            return $localstorage.get('gapi-applications') || [{\"callbackurl\": 'http://integra.adv.br', \"name\": \"Integra\" }];\r\n        };\r\n\r\n        this.getNotifications = function () {\r\n            // TODO: Implement Websockets\r\n            return $localstorage.get('gapi-notifications') || [{\"aplicacao\": \"Integra\", \"description\": \"Notificação de Teste\", \"timespan\": \"Agora pouco\"}];\r\n        };\r\n\r\n        this.getMessages = function () {\r\n            return [];\r\n        };\r\n\r\n        this.getCurrentApplication = function () {\r\n            var currentApplication = $localstorage.get('gapi-current-application') || 'Integra';\r\n            return currentApplication + ' | ';\r\n        };\r\n\r\n    }\r\n\r\n    GapiServiceBarService.$inject = ['coreApiService', '$http', '$localstorage', '$sessionstorage', '$q'];\r\n\r\n    angular.module('gapiServiceBar').service('gapiServiceBarService', GapiServiceBarService);\r\n\r\n}());"],"sourceRoot":"/source/"}