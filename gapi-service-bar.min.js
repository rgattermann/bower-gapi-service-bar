!function(){"use strict";angular.module("gapiServiceBar",[])}(),function(){"use strict";angular.module("gapiServiceBar").config(["$httpProvider",function(e){e.interceptors.push("gapiServiceBarRequestInterceptor")}])}(),function(){"use strict";function e(e,t,o){e.userPanel=function(){console.log("UserPanel")},e.userSettings=function(){console.log("UserSettings")},e.userHelp=function(){console.log("userHelp")},e.openTicket=function(){console.log("openTicket")},e.logout=function(){o.logout()},t.$on("GAPI-LOGOUT",function(){console.log("GAPI-SERVICE-BAR (-.-) LOGOUT")}),function(){var t="http://localhost:5000/api/v1/",n="Accounts";o.validateUser(t,n).then(function(){e.companyName=o.getCompanyName(),e.currentApplicationName=o.getCurrentApplication(),e.user=o.getUser(),e.applications=o.getApplications(),e.notifications=o.getNotifications(),e.messages=o.getMessages()})}()}e.$inject=["$scope","$rootScope","gapiServiceBarFactory"],angular.module("gapiServiceBar").controller("GapiServiceBarController",e)}(),angular.module("gapiServiceBar").directive("gapiServiceBar",function(){"use strict";return{restrict:"E",templateUrl:"../vendor/gapi-service-bar/gapi-service-bar.html",controller:"GapiServiceBarController",link:function(){!function(){$(".dropdown").on("show.bs.dropdown",function(){$(this).find(".dropdown-menu").first().stop(!0,!0).slideDown()}),$(".dropdown").on("hide.bs.dropdown",function(){$(this).find(".dropdown-menu").first().stop(!0,!0).slideUp()})}()}}}),function(){"use strict";function e(e,t,o,n){var r={validateUser:function(e,n){var r,i=t.defer();return window.location.search.split("=")[1]?this.setToken(window.location.search.split("=")[1]):(r=this.getToken(),r||(o.location.href=this.getAccountsUrl(),i.reject())),this.validateToken(e,function(e,t){(e||!t.result)&&i.reject(e||"No Data"),o.localStorage.setItem("GAPI-USER",JSON.stringify(t.result)),o.sessionStorage.setItem("GAPI-CURRENT-APPLICATION",n||"Integra"),i.resolve()}),i.promise},validateToken:function(t,o){e.get(t+"accounts/credentials/me").success(function(e){o(null,e)}).error(function(e){console.log("[ERROR - validateToken]: ",e),o(e,null)})},setToken:function(e){o.localStorage.setItem("GAPI-TOKEN",e)},getToken:function(){return o.localStorage.getItem("GAPI-TOKEN")},logout:function(t){e.get(t+"accounts/credentials/_logout/").success(function(e){o.localStorage.removeItem("GAPI-USER"),o.sessionStorage.removeItem("GAPI-TOKEN"),n.$broadcast("GAPI-LOGOUT",e)}).error(function(e){n.$broadcast("GAPI-LOGOUT",e)})},getUser:function(){var e=JSON.parse(o.localStorage.getItem("GAPI-USER"));return e.user},getCompanyName:function(){return"Cliente"},getApplications:function(){var e=JSON.parse(o.localStorage.getItem("GAPI-USER"));return e.applications},getNotifications:function(){return[{aplicacao:"Integra",description:"Notificação de Teste",timespan:"Agora pouco"}]},getMessages:function(){return[]},getCurrentApplication:function(){var e=o.sessionStorage["GAPI-CURRENT-APPLICATION"];return e+" | "},getAccountsUrl:function(e){return e||"http://localhost:8000?callbackurl="+o.location.origin}};return r}e.$inject=["$http","$q","$window","$rootScope"],angular.module("gapiServiceBar").factory("gapiServiceBarFactory",e)}(),function(){"use strict";function e(e,t){return{request:function(e){return e.headers["X-Session-Token"]=t.localStorage.getItem("GAPI-TOKEN"),e},requestError:function(t){return e.reject(t)},response:function(t){return t||e.when(t)},responseError:function(t){return e.reject(t)}}}e.$inject=["$q","$window"],angular.module("gapiServiceBar").factory("gapiServiceBarRequestInterceptor",e)}();
//# sourceMappingURL=gapi-service-bar.min.js.map